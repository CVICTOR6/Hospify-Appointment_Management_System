# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop"  ]
  pull_request:
    branches: [ "main" , "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
    strategy:
      matrix:
        java-version: [17]

#    env:
#      DB_DATABASE: hivedb
#      DB_USER: root
#      DB_PASSWORD: root

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: maven
          
          
      - name: Set up Postgres
        run: |
          psql -U postgres -c 'CREATE DATABASE hospifydb;'
          psql -U postgres -c 'CREATE USER hospifyuser WITH PASSWORD "123";'
          psql -U postgres -c 'GRANT ALL PRIVILEGES ON DATABASE hospifydb TO hospifyuser;'


      - name: Build
        run: mvn --batch-mode -DskipTests package

      - name: Test
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true
